$(document).ready(function() {
    /// 1. do all init.    
    var dayId   = document.getElementById("daySid");
    var roomId  = document.getElementById("roomSid");
    var startId = document.getElementById("startDaySid");
    var endId   = document.getElementById("endDaySid");
    var usageId = document.getElementById("roomUsageSid");
    var otherUsageId = document.getElementById("otherUsageSid");
    /// further init.
    var bookingDay = $(dayId).val();
    var roomNo     = $(roomId).val();
    var usageLen   = $(usageId).children('option').length;

    console.log(dayId.type);
    console.log($(dayId).attr("type"));

    /// merge columns after load the remote data.
    $(dayId).datepicker('option', 'numberOfMonths', [1, 3]); 
    $(dayId).datepicker("option", "minDate", "#{rawJS curDateStr}");
    $(dayId).datepicker("option", "maxDate", "#{rawJS endDateStr}");
    $(dayId).datepicker("option", "onSelect", onDateSelect);
    
    $(otherUsageId).hide(); // initial status of otherRoomUsage
    setupDataTable(bookingDay, roomNo)
    showDateBelowBookingStatus(bookingDay);

    /// 2. all callbacks needed.
    // [[1..20]]
    var hourInUsing = [];
    function mergeColumnAndCalcHourInUsing(mergeDatas) {
        var i = 0,
            wouldMerge = [];
                
        for (i=0; i < mergeDatas.length; i++) {
            var j = 7; // skip the first element of room number.
            // the last element will be checked in the inner while loop.
            while (j < 23) { 
                var k = j + 1,
                    count = 1,
                    tmpVal;
 
                if (mergeDatas[i].hasOwnProperty(j.toString())){
                    tmpVal = mergeDatas[i][j.toString()];
                } else {
                    tmpVal = "无";
                }
                while (tmpVal !== "无" 
                       && k < 24 // note: here using 24 to check '23'
                       && mergeDatas[i].hasOwnProperty(k.toString())
                       && tmpVal === mergeDatas[i][k.toString()])  
                {
                    count += 1;
                    if (i === 0) { // booking only has data length 1, which is i == 0.
                        hourInUsing.push(k);
                    }
                    k += 1;
                }
                if (count > 1) {
                    wouldMerge.push([i, j, count]);
                }
                if (i === 0 && tmpVal !== "无") {
                    hourInUsing.push(j); // we push j.
                }
      
                j += count;                 
            }
        }

        for (i=0; i < wouldMerge.length; i++) {
            $("##{rawJS aNewTable}").bootstrapTable('mergeCells', {
                index  : wouldMerge[i][0],
                field  : wouldMerge[i][1].toString(),
                colspan: wouldMerge[i][2],
                rowspan: 1
            });
        }
        hourInUsing.sort(function(a,b){return a - b});
        //console.log("hour in using: ");
        //console.log(hourInUsing);
    }

    function showDateBelowBookingStatus(selectDate) {
        $("##{rawJS showDateText}").empty();
        $("##{rawJS showDateText}").html("[<span style='color:#E8A02B'> <b><i>" + 
                                         selectDate + "</i></b> </span>] 预订情况");
    }

    function onDateSelect(dateText, inst) {
        bookingDay = dateText;
        destroyDataTable();
        setupDataTable(bookingDay, roomNo); 
        showDateBelowBookingStatus(dateText);
    }

    $(startId).change(function () {
        var startT = parseInt($(this).val()) + 6;
        if (jQuery.inArray (startT, hourInUsing) !== -1)
            alert(startT + "点已有预定");
    });

    $(endId).change(function () {
        //console.log($(this).val());
    });

    $(roomId).change(function () {
        roomNo = $(this).val();
        destroyDataTable();
        setupDataTable(bookingDay, roomNo); 
    });

    $(usageId).change(function () {
        var tmpVal = $(this).val();
        if (tmpVal == usageLen) { // "其他"
            $(otherUsageId).show();
        }
        else 
        {
            $(otherUsageId).hide();
        }
    });

    $('##{rawJS recordFormId}').on('submit', 
        function() {
            if ($(startId).val() > $(endId).val())
            {
               alert("会议室预定时间段非法");
               return false;
            }
            if ($(usageId).val() == usageLen) {
                if (isNullOrEmpty(trim ($(otherUsageId).val()))) {
                    alert("请填写具体的会议室用途");
                    return false;
                }
            }
    
            var startT = parseInt($(startId).val()) + 6;
            if (jQuery.inArray(startT, hourInUsing) !== -1)
            {
                alert(startT + "点已有预定");
                return false;
            }
            return true;
        }
    );

    function setupDataTable(queryDay, queryRoom) {
        var titleColumns = [];
        titleColumns.push({field: "房间 / 时间", title: "房间 / 时间"})
        for (i = 7; i < 24; i++) {
            titleColumns.push({
                field: i.toString(),
                title: i.toString() + "点" + "&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp "
                // width: "100%"
            });
        }

        $("##{rawJS aNewTable}").bootstrapTable({
            striped: true,
            pagination: false,
            showToggle: true,
            showColumns: false,
            cache: false,           
            pageList: [5,8,10],

            // below is the ajax query and response process.
            url: "@{DayBookingStatusR}",
            method: "GET",
            contentType: "application/json",           

            queryParams: function (params) {
                params["queryDay"]  = queryDay;
                params["queryRoomId"] = queryRoom;
                return params;
            },

            responseHandler: function(retData){
                // when new data comming, we set hourInUsing to empty.
                // hourInUsing.length = 0;
                while(hourInUsing.length > 0) {
                    hourInUsing.pop();
                }
                return retData.dataRows;
            },

            rowStyle: function (row, index) {
                var classes = ['success', 'info', 'active', 'warning', 'danger'];
                if (index % 2 === 0 && index / 2 < classes.length) {
                    return {
                        classes: classes[index / 2],
                    };
                }
                return {};
            },

            onLoadSuccess : mergeColumnAndCalcHourInUsing,

            columns: titleColumns
        });

        // calculate the cells need merge.
    }

    function destroyDataTable() {
        $("##{rawJS aNewTable}").bootstrapTable("destroy");
        $("##{rawJS aNewTable}").empty(); 
    }

    /// other helpers
    function trim(str){ //删除左右两端的空格
　　     return str.replace(/(^\s*)|(\s*$)/g, "");
　　 }

    function isNullOrEmpty(strVal) {
        if (strVal == '' || strVal == null || strVal == undefined) {
            return true;
        } else {
            return false;
        }
    }

    function deepCopy(obj) {
        if (Object.prototype.toString.call(obj) === '[object Array]') {
            var out = [], i = 0, len = obj.length;
            for ( ; i < len; i++ ) {
                out[i] = arguments.callee(obj[i]);
            }
            return out;
        }
        if (typeof obj === 'object') {
            var out = {}, i;
            for ( i in obj ) {
                out[i] = arguments.callee(obj[i]);
            }
            return out;
        }
        return obj;
    }
});
